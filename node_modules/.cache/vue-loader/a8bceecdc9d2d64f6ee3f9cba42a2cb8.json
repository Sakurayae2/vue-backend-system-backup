{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\testlist.vue?vue&type=style&index=0&id=71140f3c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\testlist.vue","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLlRlc3RDb250ZW50ewogIHdpZHRoOiA4MCU7CiAgbWluLWhlaWdodDogMjAwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHBhZGRpbmc6IDEwcHg7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9Ci5lbC10YWcgKyAuZWwtdGFnIHsKICBtYXJnaW4tdG9wOiA1cHg7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KLmJ1dHRvbi1uZXctdGFnIHsKICBtYXJnaW4tdG9wOiA1cHg7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgaGVpZ2h0OiAzMnB4OwogIGxpbmUtaGVpZ2h0OiAzMHB4OwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAwOwp9Ci5pbnB1dC1uZXctdGFnIHsKICB3aWR0aDogOTBweDsKICBtYXJnaW4tbGVmdDogMTBweDsKICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOwp9Cg=="},{"version":3,"sources":["testlist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"testlist.vue","sourceRoot":"src/views/award","sourcesContent":["<template>\n  <div>\n    <!-- 卡片视图 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-input v-model=\"uin\" placeholder=\"请输入一个或多个ID,如:1,2,3\" @keyup.enter.native=\"addTestUser\" clearable>\n            <el-button slot=\"append\" icon=\"el-icon-plus\" @click=\"addTestUser\" />\n          </el-input>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-input v-model=\"searchInput\" placeholder=\"请输入本地搜索的ID\" @keyup.enter.native=\"search\" @blur=\"search\" clearable>\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"search\" />\n          </el-input>\n        </el-col>\n      </el-row>\n      <el-row :gutter=\"20\">\n        <el-col>\n          <p>测试用户名单:</p>\n          <div class=\"TestContent\">\n            <el-tag\n              v-for=\"tag in dynamicTags\"\n              :key=\"tag\"\n              closable\n              class=\"tags\"\n              :disable-transitions=\"false\"\n              @close=\"handleClose(tag)\"\n            >{{ tag }}\n            </el-tag>\n            <el-input\n              v-if=\"inputVisible\"\n              ref=\"saveTagInput\"\n              v-model=\"inputValue\"\n              class=\"input-new-tag\"\n              size=\"small\"\n              @keyup.enter.native=\"handleInputConfirm\"\n              @blur=\"handleInputConfirm\"\n            />\n            <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getTest, addTest, deleteTest } from '@/api/award'\nimport qs from 'qs'\n\nexport default {\n  data() {\n    return {\n      searchInput: '',\n      uin: '',\n      testList: '',\n      dynamicTags: [],\n      inputVisible: false,\n      inputValue: ''\n    }\n  },\n  created() {\n    this.getTestList()\n  },\n  methods: {\n    search(){\n      var index = this.dynamicTags.indexOf(this.searchInput)\n      // console.log(index)\n      console.log(this.dynamicTags[index])\n      const tags = document.getElementsByClassName('tags')\n      tags[index].style.color = \"red\"\n      tags[index].style.borderColor = \"red\"\n      setTimeout(() => {\n        tags[index].style.color = \"#409EFF\"\n        tags[index].style.borderColor = \"#d9ecff\"\n      }, 10000)\n      this.searchInput = ''\n    },\n    getTestList() {\n      getTest().then(res => {\n        this.testList = res.data.retData.dataList\n        this.dynamicTags = res.data.retData.dataList\n      })\n    },\n    // 添加多个\n    addTestUser() {\n      const data = { new_list: this.uin }\n      addTest(qs.stringify(data)).then(res => {\n        this.$message.success('添加新用户：' + res.data.retData.dataList + ' 成功')\n        this.getTestList()\n      })\n    },\n    // 删除用户\n    handleClose(tag) {\n      const data = { new_list: tag }\n      deleteTest(qs.stringify(data)).then(res => {\n        this.$message.success('成功删除' + res.data.retData.dataList)\n        // this.getTestList()\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\n      })\n    },\n    // 显示New Tag输入框\n    showInput() {\n      this.inputVisible = true\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    // New Tag 添加新用户\n    handleInputConfirm() {\n      const inputValue = this.inputValue\n      if (inputValue) {\n        const data = { new_list: inputValue }\n        const index = this.dynamicTags.indexOf(this.inputValue)\n        if(index >= 0){\n          this.$message.warning('重复添加新用户：' + this.inputValue + ' ')\n          const tags = document.getElementsByClassName('tags')\n          tags[index].style.borderColor = \"red\"\n          setTimeout(() => {\n            tags[index].style.borderColor = \"#d9ecff\"\n          }, 3000)\n          this.inputValue = ''\n          return\n        }\n        getTest(qs.stringify(data)).then(res => {\n          this.$message.success('添加新用户：' + this.inputValue + ' 成功')\n          // this.getTestList()\n          this.dynamicTags.push(inputValue)\n        })\n      }\n      this.inputVisible = false\n      this.inputValue = ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.TestContent{\n  width: 80%;\n  min-height: 200px;\n  border: 1px solid #ccc;\n  margin-top: 20px;\n  padding: 10px;\n  border-radius: 5px;\n}\n.el-tag + .el-tag {\n  margin-top: 5px;\n  margin-left: 10px;\n}\n.button-new-tag {\n  margin-top: 5px;\n  margin-left: 10px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.input-new-tag {\n  width: 90px;\n  margin-left: 10px;\n  vertical-align: bottom;\n}\n</style>\n"]}]}