{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\user\\userInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\user\\userInfo.vue","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\babel.config.js","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["userInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"pp-container\">\n    <el-card>\n      <el-row type=\"flex\" justify=\"space-between\" style=\"margin-bottom: 15px;\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"queryInfo.uin\" placeholder=\"请输入uin/机器码\" clearable @keyup.enter.native=\"getList\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click.native=\"getList\" />\n          </el-input>\n        </el-col>\n      </el-row>\n      <el-tabs v-model=\"activeName\" type=\"card\" @tab-click=\"handleClick\">\n        <el-tab-pane v-for=\"(item,index) in userInfoList\" :key=\"index\" class=\"margin10\" :label=\"item.info.uin\" :name=\"index+''\">\n          <div class=\"userInfo\">\n            <div class=\"avatar\">\n              <div class=\"one\">\n                <el-avatar shape=\"square\" :size=\"150\" :src=\"item.user_singinfo.imageUrl\"></el-avatar>\n                <div class=\"avatarBtn\">\n                  <el-button type=\"danger\" @click=\"showDialogFormVisible()\">封锁</el-button>\n                  <!--<el-button type=\"danger\">默认</el-button>-->\n                </div>\n              </div>\n              <div class=\"face\">\n                <el-image style=\"width: 100%; height: 100%; border-radius: 5px;\" :src=\"item.src1\" fit=\"cover\"></el-image>\n                <div class=\"faceTxt\">第一张人脸</div>\n              </div>\n              <div class=\"face\">\n                <el-image style=\"width: 100%; height: 100%; border-radius: 5px;\" :src=\"item.src2\" fit=\"cover\"></el-image>\n                <div class=\"faceTxt\">最后一张人脸</div>\n              </div>\n            </div>\n            <div class=\"info\">\n              <el-descriptions title=\"用户信息\" :column=\"2\">\n                <el-descriptions-item label=\"昵称\">{{ item.info.onlynick }}\n                <!--<el-tag type=\"danger\" effect=\"dark\" size=\"small\" style=\"margin-left: 10px;\">清除</el-tag>-->\n                </el-descriptions-item>\n                <el-descriptions-item label=\"注册日期\">{{ item.info.regtime }}</el-descriptions-item>\n                <el-descriptions-item label=\"ID号\">{{ item.info.uin }}\n                  <el-tag v-if=\"item.nice_id !== ''\" type=\"danger\" effect=\"dark\" size=\"small\" style=\"margin-left: 10px;\">无靓号</el-tag>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"登录方式\">{{ item.loginType[item.info.login_type] }}</el-descriptions-item>\n                <el-descriptions-item label=\"乐豆\">{{ item.info.money }}</el-descriptions-item>\n                <el-descriptions-item label=\"机型\">{{ item.info.terminal_type }}</el-descriptions-item>\n                <el-descriptions-item label=\"手机号\">{{ item.info.mobile }}</el-descriptions-item>\n                <el-descriptions-item label=\"身份证\">{{ item.info.cert_id }}</el-descriptions-item>\n                <el-descriptions-item label=\"乐券\">{{ item.info.received }}</el-descriptions-item>\n                <el-descriptions-item label=\"等级\">{{ item.info.award_flag || 0 }}级</el-descriptions-item>\n                <el-descriptions-item label=\"收入\">{{ item.info.income || 0 }}元</el-descriptions-item>\n                <el-descriptions-item label=\"充值\">{{ item.info.charge_money || 0 }}元</el-descriptions-item>\n                <el-descriptions-item label=\"提现\">{{ item.info.cash_money || 0 }}元/{{ item.info.cash_num || 0 }}次</el-descriptions-item>\n                <el-descriptions-item label=\"送礼\"></el-descriptions-item>\n                <el-descriptions-item label=\"开播\">{{ item.info.v_duration || 0 }}分钟/{{ item.info.v_duration_days || 0 }}天</el-descriptions-item>\n                <el-descriptions-item label=\"版本\">{{ item.info.version }}</el-descriptions-item>\n                <el-descriptions-item label=\"\"></el-descriptions-item>\n                <el-descriptions-item label=\"收徒收益\">{{ item.disciples || 0 }}人 总共{{ item.total_ld || 0 }}豆</el-descriptions-item>\n                <el-descriptions-item label=\"最近登录时间\">{{ item.updated }}</el-descriptions-item>\n                <el-descriptions-item label=\"贵族\">{{ item.nobleman }}</el-descriptions-item>\n                <el-descriptions-item label=\"机器码\">{{ item.mac }}\n                  <el-popover\n                    placement=\"bottom\"\n                    trigger=\"hover\">\n                    <el-table :data=\"gridData.machineCode\" :show-header=\"false\" :cell-style=\"{ padding:'0px' }\" @row-click=\"rowClick\">\n                      <el-table-column width=\"200\" align=\"center\" property=\"machineCode\"></el-table-column>\n                    </el-table>\n                    <el-tag slot=\"reference\" type=\"info\" effect=\"dark\" size=\"small\" style=\"margin-left: 10px;\">同机号码</el-tag>\n                  </el-popover>\n                </el-descriptions-item>\n                <el-descriptions-item label=\"IP\">({{ item.city }}){{ item.ip }}\n                  <el-popover\n                    placement=\"bottom\"\n                    trigger=\"hover\">\n                    <el-table :data=\"gridData.ip\" :show-header=\"false\" :cell-style=\"{ padding:'0px' }\" @row-click=\"rowClick\">\n                      <el-table-column width=\"150\" align=\"center\" property=\"ip\"></el-table-column>\n                    </el-table>\n                    <el-tag slot=\"reference\" type=\"info\" effect=\"dark\" size=\"small\" style=\"margin-left: 10px;\">同IP号码</el-tag>\n                  </el-popover>\n                </el-descriptions-item>\n              </el-descriptions>\n            </div>\n          </div>\n          <div class=\"earnings\">\n            <div class=\"block\">\n              <el-date-picker\n                v-model=\"earningsDate\"\n                type=\"date\"\n                placeholder=\"选择日期\"\n                value-format=\"yyyy-MM-dd\"\n                :default-value=\"new Date()\"\n                @change=\"timeSearch\"\n              ></el-date-picker>\n            </div>\n            <!--     转化table       -->\n            <el-table :data=\"item.transData\" border style=\"margin-top: 20px;\">\n              <el-table-column v-for=\"(childItem, childIndex) in item.transTitle\" :key=\"childIndex\" :label=\"childItem\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  {{ scope.row[childIndex] }}\n                  <i\n                    v-if=\"childIndex >= 1 && (scope.$index === 2 && item.transData[scope.$index][childIndex]<120) || (scope.$index === 3 && item.transData[scope.$index][childIndex]<2)\"\n                    class=\"el-icon-close\"\n                    style=\"color: red;font-weight: bold;\"\n                  ></i>\n                </template>\n              </el-table-column>\n            </el-table>\n\n            <el-table :data=\"item.award\" stripe border style=\"margin-top: 20px;\">\n              <el-table-column prop=\"date\" label=\"时间\"></el-table-column>\n              <el-table-column prop=\"money\" label=\"数量\"></el-table-column>\n              <el-table-column prop=\"reason\" label=\"兑换途径\"></el-table-column>\n            </el-table>\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n\n    <!--  封锁弹窗  -->\n    <el-dialog title=\"详情\" :visible.sync=\"dialogFormVisible\">\n      <el-form :model=\"blockForm\">\n        <el-form-item label=\"用户昵称\" :label-width=\"blockFormLabelWidth\">{{ blockForm.name }}</el-form-item>\n        <el-form-item label=\"用户uin\" :label-width=\"blockFormLabelWidth\">\n          {{ currentUser.uin }}\n        </el-form-item>\n        <el-form-item label=\"登录mac\" :label-width=\"blockFormLabelWidth\">\n          {{ currentUser.mac }}\n        </el-form-item>\n        <el-form-item label=\"封锁分类\" :label-width=\"blockFormLabelWidth\">\n          <el-checkbox v-model=\"blockNotes.checkedLogin\" true-label=\"1,2\" false-label=\"\" label=\"登录封锁\" @change=\"showDialogFormVisible\"></el-checkbox>\n          <el-checkbox v-model=\"blockNotes.checkedRoom\" true-label=\"4\" false-label=\"\" label=\"房间封锁\" checked @change=\"showDialogFormVisible\"></el-checkbox>\n        </el-form-item>\n        <el-form-item label=\"封锁时长\" :label-width=\"blockFormLabelWidth\">\n          <el-select v-model=\"blockNotes.duration\" placeholder=\"请选择封锁时长\">\n            <el-option\n              v-for=\"(item,index) in blockNotes.hoursList\"\n              :key=\"index\"\n              :label=\"item\"\n              :value=\"item\"\n            ></el-option>\n          </el-select>\n          <span class=\"tips\" style=\"margin-left: 10px;\">已被封禁{{ blockNotes.blockCount }}次</span>\n        </el-form-item>\n        <el-form-item label=\"封锁理由\" :label-width=\"blockFormLabelWidth\">\n          <el-checkbox-group v-model=\"blockNotes.checkList\">\n            <el-checkbox v-for=\"(item, index) in blockNotes.checkLabelList\" :key=\"index\" :label=\"item\"></el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"理由补充\" :label-width=\"blockFormLabelWidth\">\n          <el-input\n            v-model=\"blockNotes.textarea\"\n            type=\"textarea\"\n            :rows=\"4\"\n            placeholder=\"请输入内容\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false;\">取 消</el-button>\n        <el-button type=\"danger\" @click=\"block\">封 锁</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { userBlock, getInfoList, getRelationList, getManag, getBlockCount } from '@/api/userManagement'\nimport { mapGetters } from 'vuex'\nimport qs from 'qs'\n\nexport default {\n  name: 'UserInfo',\n  data() {\n    return {\n      // 数量/兑换途径table\n      earningsTable: [],\n      // 星级/排名table\n      tableData: [],\n      originTitle: ['星级/排名', '流水(乐豆)', '有效时长(分钟)', '分享(次)'], // 转后的列表头title,原始的行表头\n      transTitle: ['', '今天', '昨天'], // 转后的行表头title\n      transData: [], // 转化 星级/排名table 为纵向\n      // 收益搜索默认时间\n      earningsDate: '',\n      earningsYesterdayDate: '',\n      // 封锁弹窗部分\n      dialogFormVisible: false,\n      blockForm: {\n        password: '23651943',\n        operator: '', // 操作人\n        name: '',\n        uin: '',\n        mac: '',\n        cate: '', // 1：uin封锁 2：mac封锁 3：ip封锁 4:房间封锁\n        hours: 4,\n        descr: ''\n      },\n      blockNotes: {\n        checkedLogin: '', // 登录封锁\n        checkedRoom: '', // 房间封锁\n        duration: '4h',\n        hoursList: ['4h', '8h', '16h', '32h', '72h', '永久'],\n        blockCount: 0, // 当前用户某项封锁分类封锁次数\n        checkList: [],\n        checkLabelList: ['涉黄', '擦边', '广告/拉人', '昵称/头像违规', '谩骂', '多账号直播', '刷收益', '双开', '保护祖国花朵'],\n        textarea: ''\n      },\n      blockFormLabelWidth: '120px',\n      gridData: {\n        machineCode: [],\n        ip: []\n      },\n      // url: 'https://fuss10.elemecdn.com/e/5d/4a731a90594a4af544c0c25941171jpeg.jpeg',\n      activeName: '0',\n      queryInfo: {\n        // uin: '30101097',\n        // uin: 'FD5F66FA706EBC75',\n        uin: '',\n        pid: 1,\n        mode: 1,\n        time: ''\n      },\n      userInfoList: [\n        {\n          info: {\n            uin: '',\n            login_type: 0\n          },\n          src1: 'https://s.5dktv.com/avator/noone.gif',\n          src2: 'https://s.5dktv.com/avator/noone.gif',\n          loginType: [''],\n          user_singinfo: {\n            imageUrl: 'https://s.5dktv.com/avator/noone.gif'\n          },\n          nice_id: ''\n        }\n      ],\n      currentUser: {\n        uin: '',\n        mac: ''\n      },\n      currentIndex: 0,\n      count: 0,\n      userInfoListIndex: [],\n      is_clear_userInfoList: true\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'username'\n    ])\n  },\n  created() {\n    this.init()\n    if (this.$route.query.uin) {\n      this.queryInfo.uin = this.$route.query.uin\n      this.getList()\n    }\n  },\n  methods: {\n    async getList(e, DataUin) {\n      this.queryInfo.mode = 1\n      this.queryInfo.time = ''\n      const data = {\n        uin: DataUin || this.queryInfo.uin,\n        pid: this.queryInfo.pid,\n        mode: this.queryInfo.mode\n      }\n      // mac机器码搜索\n      if (/[A-Za-z]+/g.test(this.queryInfo.uin) && this.is_clear_userInfoList) {\n        if (this.is_clear_userInfoList) this.userInfoList = [] // 清空用户信息列表\n        const resMac = await getRelationList(data)\n        // 循环获取同机器码的uin账号\n        const arr = resMac.data.retData.slice(0, 5)\n        for (let i = 0; i < arr.length; i++) {\n          // this.queryInfo.uin = arr[i].uin\n          this.is_clear_userInfoList = false\n          await this.getList(e, arr[i].uin)\n          this.count++\n        }\n        this.is_clear_userInfoList = true\n        this.count = 0\n        return\n      }\n      // 请求用户信息\n      const res1 = await getInfoList(data)\n      const res2 = await getManag(qs.stringify(data))\n      // const res1 = await this.$http.get('https://www.suibo.tv/api/pwapi/manage/user/info', { params: data })\n      // const res2 = await this.$http.post('https://www.suibo.tv/api/pwapi/manage/backsage_manag/index', qs.stringify(data),\n      //   { headers: { 'content-type': 'application/x-www-form-urlencoded' }\n      //   })\n      this.userInfoListIndex.push(this.queryInfo.uin)\n      // console.log(this.userInfoListIndex)\n      res1.data.retData.info.uin = res1.data.retData.info.uin + '' // num->string\n      const res = Object.assign(res1.data.retData, res2.data.retData)\n      if (this.is_clear_userInfoList) this.userInfoList = [] // 清空用户信息列表\n      this.userInfoList.push(res)\n      // console.log(this.userInfoList[this.currentIndex])\n      this.blockForm.name = this.userInfoList[this.currentIndex].info.onlynick\n      this.currentUser.uin = this.userInfoList[this.currentIndex].info.uin\n      this.currentUser.mac = this.userInfoList[this.currentIndex].mac\n      this.transTitle[1] = this.earningsDate\n      this.transTitle[2] = this.earningsYesterdayDate\n      this.tableData = []\n      this.tableData.push({\n        rank: this.userInfoList[this.count].user_singinfo.rank,\n        score: this.userInfoList[this.count].user_singinfo.score,\n        duration: this.userInfoList[this.count].user_singinfo.duration,\n        shareNum: this.userInfoList[this.count].user_singinfo.shareNum\n      })\n      this.tableData.push({\n        rank: this.userInfoList[this.count].user_yesterday_singinfo.rank,\n        score: this.userInfoList[this.count].user_yesterday_singinfo.score,\n        duration: this.userInfoList[this.count].user_yesterday_singinfo.duration,\n        shareNum: this.userInfoList[this.count].user_yesterday_singinfo.shareNum\n      })\n      this.transData = this.table(this.tableData, this.originTitle)\n      this.gridData.machineCode = []\n      for (const key in this.userInfoList[this.count].other_mac) {\n        this.gridData.machineCode.push({ machineCode: key })\n      }\n      this.gridData.ip = []\n      for (const key in this.userInfoList[this.count].other_ip) {\n        this.gridData.ip.push({ ip: key })\n      }\n      // this.userInfoList[this.count]\n      this.$set(this.userInfoList[this.count], 'transData', this.transData)\n      this.$set(this.userInfoList[this.count], 'transTitle', this.transTitle)\n      // this.activeName = this.count + ''\n      this.currentIndex = this.count\n    },\n    // 时间搜索\n    async timeSearch() {\n      const data = this.queryInfo\n      data.mode = 2\n      data.time = this.earningsDate\n      const res = await getManag(qs.stringify(data))\n      // const res = await this.$http.post('https://www.suibo.tv/api/pwapi/manage/backsage_manag/index', qs.stringify(data),\n      //   { headers: { 'content-type': 'application/x-www-form-urlencoded' }\n      //   })\n      this.init(this.earningsDate)\n      this.transTitle[1] = this.earningsDate\n      this.transTitle[2] = this.earningsYesterdayDate\n      this.tableData = []\n      this.tableData.push({\n        rank: res.data.retData.other_singinfo.rank,\n        score: res.data.retData.other_singinfo.score,\n        duration: res.data.retData.other_singinfo.duration,\n        shareNum: res.data.retData.other_singinfo.shareNum\n      })\n      this.tableData.push({\n        rank: res.data.retData.other_yesterday_singinfo.rank,\n        score: res.data.retData.other_yesterday_singinfo.score,\n        duration: res.data.retData.other_yesterday_singinfo.duration,\n        shareNum: res.data.retData.other_yesterday_singinfo.shareNum\n      })\n      this.transData = this.table(this.tableData, this.originTitle)\n      this.userInfoList[this.currentIndex].transData = this.transData\n      this.userInfoList[this.currentIndex].transTitle = this.transTitle\n      // console.log(this.userInfoList)\n    },\n    // 封锁用户\n    block() {\n      this.blockForm.uin = this.currentUser.uin\n      this.blockForm.mac = this.currentUser.mac\n      this.blockForm.operator = this.username\n      this.blockForm.descr = this.blockNotes.checkList.join(' ') + ' ' + this.blockNotes.textarea\n      this.blockForm.cate = this.blockNotes.checkedLogin + ',' + this.blockNotes.checkedRoom\n      this.blockForm.hours = this.blockNotes.duration\n      // console.log(this.blockForm)\n      this.blockForm.hours = this.blockForm.hours === '永久' ? '永久' : parseInt(this.blockForm.hours)\n      this.$confirm('你将封锁用户 ' + this.blockForm.uin + '（' + this.blockForm.name + '）', '封锁确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        userBlock(qs.stringify(this.blockForm)).then(res => {\n          this.$message.success('封锁成功')\n          this.dialogFormVisible = false\n        })\n      }).catch(() => {\n      })\n    },\n    // 点击同机号码 跳转新页面\n    rowClick(row, column, event) {\n      const params = { uin: event.target.innerHTML }\n      const routeData = this.$router.resolve({\n        name: 'userInfo',\n        query: params\n      })\n      window.open(routeData.href, '_blank')\n    },\n    // 切换顶部用户\n    handleClick(tab, event) {\n      this.currentIndex = Number(tab.index)\n      // console.log(this.currentIndex)\n      this.blockForm.name = this.userInfoList[this.currentIndex].info.onlynick\n      this.blockForm.uin = this.userInfoList[this.currentIndex].info.uin\n      this.blockForm.mac = this.userInfoList[this.currentIndex].mac\n      this.currentUser.uin = this.userInfoList[this.currentIndex].info.uin\n      this.currentUser.mac = this.userInfoList[this.currentIndex].mac\n      // this.queryInfo.uin = this.currentUser.uin\n      this.gridData.machineCode = []\n      for (const key in this.userInfoList[this.currentIndex].other_mac) {\n        this.gridData.machineCode.push({ machineCode: key })\n      }\n      this.gridData.ip = []\n      for (const key in this.userInfoList[this.currentIndex].other_ip) {\n        this.gridData.ip.push({ ip: key })\n      }\n      this.timeSearch()\n    },\n    // 纵向table\n    table(tableData, originTitle) {\n      // 数组按矩阵思路, 变成转置矩阵\n      const matrixData = tableData.map((row) => {\n        const arr = []\n        for (const key in row) {\n          arr.push(row[key])\n        }\n        return arr\n      })\n      // 返回拼接最终的数据\n      return matrixData[0].map((col, i) => {\n        return [originTitle[i], ...matrixData.map((row) => {\n          return row[i]\n        })]\n      })\n    },\n    // 展示封锁弹窗\n    showDialogFormVisible() {\n      this.dialogFormVisible = true\n      setTimeout(() => {\n        this.blockRegion()\n      }, 100)\n    },\n    // 封锁分类切换获取封锁次数\n    async blockRegion() {\n      this.blockForm.cate = this.blockNotes.checkedLogin + ',' + this.blockNotes.checkedRoom\n      // console.log(this.blockForm.cate)\n      const data = {\n        uin: this.currentUser.uin,\n        cate: this.blockForm.cate\n      }\n      const res = await getBlockCount(qs.stringify(data))\n      // console.log(res.data.retData)\n      this.blockNotes.blockCount = res.data.retData\n      if (this.blockNotes.blockCount >= 5) {\n        this.blockNotes.duration = '永久'\n      } else {\n        this.blockNotes.duration = this.blockNotes.hoursList[this.blockNotes.blockCount]\n      }\n    },\n    // 初始化\n    init(date) {\n      if (!date) {\n        const now = new Date()\n        this.earningsDate = now.getFullYear() + '-' +\n          (now.getMonth() + 1).toString().padStart(2, '0') + '-' +\n          (now.getDate()).toString().padStart(2, '0')\n      } else {\n        this.earningsDate = date\n      }\n      const yes = new Date(new Date(this.earningsDate).getTime() - 3600 * 1000 * 24)\n      // const yes = new Date(now.setTime(now.getTime() - 3600 * 1000 * 24))\n      this.earningsYesterdayDate = yes.getFullYear() + '-' +\n        (yes.getMonth() + 1).toString().padStart(2, '0') + '-' +\n        (yes.getDate()).toString().padStart(2, '0')\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.margin10{\n  margin: 10px;\n}\n.userInfo{\n  display: flex;\n  .avatar{\n    display: flex;\n    .avatarBtn{\n      margin-top: 10px;\n    }\n    .face{\n      width: 150px;\n      height: 200px;\n      margin-left: 15px;\n      .faceTxt{\n        text-align: center;\n        margin-top: 10px;\n      }\n    }\n  }\n  .info{\n    margin-left: 30px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/user"}]}