{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\share.vue?vue&type=style&index=0&id=74b751fa&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\share.vue","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_sass-loader@8.0.2@sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZXhwb3J0VGFibGV7CiAgZmxvYXQ6IHJpZ2h0OwogIG1hcmdpbi10b3A6IDEwcHg7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7Cn0K"},{"version":3,"sources":["share.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgXA;AACA;AACA;AACA;AACA","file":"share.vue","sourceRoot":"src/views/award","sourcesContent":["<template>\n  <div class=\"pp-container\">\n    <el-card>\n      <el-row type=\"flex\" justify=\"space-between\" style=\"margin-bottom: 15px;\">\n        <el-col :span=\"8\">\n          <el-input v-model=\"searchInput\" placeholder=\"请输入搜索实验名称\" clearable @keyup.enter.native=\"search\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"search\" />\n          </el-input>\n        </el-col>\n        <el-col>\n          <el-radio-group v-model=\"radio\" style=\"float: right\" @change=\"daysChange()\">\n            <el-radio-button label=\"实时\"></el-radio-button>\n            <el-radio-button label=\"昨天\"></el-radio-button>\n            <el-radio-button label=\"过去7天\"></el-radio-button>\n          </el-radio-group>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            style=\"margin-left: 10px\"\n            @click=\"fn_getLink()\"\n          >创建实验</el-button>\n        </el-col>\n      </el-row>\n      <el-table v-loading=\"loading\" :data=\"tableData\">\n        <el-table-column\n          v-for=\"(item,index) in tableTitleData\"\n          :key=\"index\"\n          :prop=\"item.prop\"\n          :label=\"item.label\"\n          align=\"center\"\n        ></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-popover\n              placement=\"right\"\n              width=\"380\"\n            >\n              <div class=\"block\">\n                <el-date-picker\n                  v-model=\"timeBucket\"\n                  type=\"daterange\"\n                  value-format=\"yyyy-MM-dd\"\n                  range-separator=\"-\"\n                  start-placeholder=\"开始日期\"\n                  end-placeholder=\"结束日期\"\n                ></el-date-picker>\n                <div class=\"exportTable\">\n                  <el-button\n                    size=\"mini\"\n                    type=\"primary\"\n                    :disabled=\"!timeBucket\"\n                    @click.native.prevent=\"handleDownloadData(scope.row)\"\n                  >导出</el-button>\n                </div>\n              </div>\n              <el-button\n                slot=\"reference\"\n                type=\"text\"\n                size=\"small\"\n              >导出</el-button>\n            </el-popover>\n            <el-button\n              type=\"text\"\n              size=\"small\"\n              style=\"margin-left: 10px\"\n              @click.native.prevent=\"fn_edit(scope.row)\"\n            >查看</el-button>\n            <el-button\n              type=\"text\"\n              size=\"small\"\n              @click.native.prevent=\"fn_delete(scope.$index, scope.row)\"\n            >删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!--  创建实验  -->\n    <el-dialog :title=\"state + '实验页面'\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"ruleForm\" :model=\"form\" :rules=\"formRules\">\n        <el-form-item label=\"实验名称\" prop=\"name\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.name\" placeholder=\"请输入实验名称\" :disabled=\"state !== '创建'\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"实验描述\" prop=\"desc\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.desc\" type=\"textarea\" placeholder=\"请输入此次活动的描述\" :disabled=\"state !== '创建'\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分享链接1\" prop=\"link\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.link\" placeholder=\"该实验的分享链接\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"房间类型\" prop=\"linktype\" :label-width=\"formLabelWidth\">\n          <el-select v-model=\"form.linktype\" placeholder=\"请选择房间类型\" :disabled=\"state !== '创建'\">\n            <el-option label=\"聊天房间\" value=\"0\"></el-option>\n            <el-option label=\"唱歌房间\" value=\"1\"></el-option>\n            <el-option label=\"舞蹈房间\" value=\"2\"></el-option>\n            <el-option label=\"象棋房间\" value=\"3\"></el-option>\n            <el-option label=\"直播房间\" value=\"25\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"linkid\" prop=\"linkid\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.linkid\" placeholder=\"友盟创建裂变活动对应的linkid\" :disabled=\"state !== '创建'\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文案编辑位置1\" prop=\"text1\" :label-width=\"formLabelWidth\">\n          <div>\n            <span>是否获取用户信息：</span>\n            <el-radio v-model=\"radioText1\" label=\"1\" @change=\"radioTextChange('text1')\">是</el-radio>\n            <el-radio v-model=\"radioText1\" label=\"2\" @change=\"radioTextChange('text1')\">否</el-radio>\n          </div>\n          <el-input v-model=\"form.text1\" :disabled=\"state !== '创建' || radioText1==='1'\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文案编辑位置2\" prop=\"text2\" :label-width=\"formLabelWidth\">\n          <div>\n            <span>是否获取用户信息：</span>\n            <el-radio v-model=\"radioText2\" label=\"1\" @change=\"radioTextChange('text2')\">是</el-radio>\n            <el-radio v-model=\"radioText2\" label=\"2\" @change=\"radioTextChange('text2')\">否</el-radio>\n          </div>\n          <el-input v-model=\"form.text2\" :disabled=\"state !== '创建' || radioText2==='1'\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"fn_create()\">{{ state }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getShare, getShareLink, createShare, editOrDeleteShare, exportShare } from '@/api/award'\nimport qs from 'qs'\n\nexport default {\n  inject: ['reload'],\n  data() {\n    return {\n      radioText1: '1',\n      radioText2: '1',\n      customText: {\n        text1: '',\n        text2: ''\n      },\n      loading: false,\n      searchInput: '',\n      radio: '过去7天',\n      dialogFormVisible: false,\n      // 创建列表 编辑列表\n      form: {\n        text2: '',\n        text1: '',\n        linktype: '',\n        link: '',\n        name: '',\n        desc: '',\n        linkid: ''\n      },\n      formRules: {\n        name: [{ required: true, message: '此处不能为空', trigger: 'blur' }],\n        desc: [{ required: true, message: '此处不能为空', trigger: 'blur' }],\n        linktype: [{ required: true, message: '此处不能为空', trigger: 'blur' }],\n        link: [{ required: true, message: '此处不能为空', trigger: 'blur' }],\n        linkid: [{ required: true, message: '此处不能为空', trigger: 'blur' }],\n        text1: [{ required: true, message: '此处不能为空', trigger: 'blur' }],\n        text2: [{ required: true, message: '此处不能为空', trigger: 'blur' }]\n      },\n      formLabelWidth: '120px',\n      state: '创建',\n      timeBucket: '',\n      timeExportBtn: true,\n      tableData: [],\n      tableDataCache: [],\n      tableTitleData: [\n        { label: '实验名称(链接)', prop: 'name' },\n        { label: '分享点击PV', prop: 'shareClickPv' },\n        { label: '分享点击UV', prop: 'shareClickUv' },\n        { label: '链接触发PV', prop: 'linkClickPv' },\n        { label: '链接触发UV', prop: 'linkClickUv' },\n        { label: '人均停留时间', prop: 'totalDuration' },\n        { label: '链接点击PV', prop: 'downloadPv' },\n        { label: '链接点击UV', prop: 'downloadUv' },\n        { label: 'APP启动PV', prop: '' },\n        { label: 'APP启动UV', prop: '' },\n        { label: 'app新增人数', prop: '' },\n        { label: '其他活动指标', prop: '' }\n      ]\n    }\n  },\n  created() {\n    this.daysChange()\n  },\n  methods: {\n    // 获取列表\n    daysChange() {\n      this.loading = true\n      const params = {\n        days: ''\n      }\n      if (this.radio === '实时') {\n        params.days = ''\n      } else if (this.radio === '昨天') {\n        params.days = 1\n      } else if (this.radio === '过去7天') {\n        params.days = 7\n      }\n      getShare(params).then((res) => {\n        // console.log(res.data.retData)\n        this.tableData = res.data.retData.dataDict\n        this.tableDataCache = this.tableData\n        this.loading = false\n      }).catch(() => {\n        this.loading = false\n      })\n    },\n    // 搜索\n    search() {\n      this.tableData = []\n      this.tableDataCache.forEach(item => {\n        if (item.name.indexOf(this.searchInput) !== -1) {\n          this.tableData.push(item)\n        }\n      })\n    },\n    // 编辑\n    fn_edit(row) {\n      this.state = '编辑'\n      this.dialogFormVisible = true\n      this.form.index = row.index\n      this.form.name = row.name\n      this.form.desc = row.desc\n      this.form.text1 = row.text1\n      this.form.text2 = row.text2\n      this.form.link = row.link\n      this.form.linkid = row.u_link_id\n      this.form.linktype = row.linktype\n      this.form.cmd = 'edit'\n    },\n    // 删除\n    fn_delete(index, row) {\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          cmd: 'delete',\n          index: row.index,\n          linktype: row.linktype\n        }\n        console.log(data)\n        editOrDeleteShare(qs.stringify(data)).then((res) => {\n          // console.log(res.data.retData)\n          if (res.data.retData.msg === 200) {\n            this.tableDataCache.splice(index, 1)\n            this.tableData = this.tableDataCache\n            this.$message.success('删除成功')\n          }\n        })\n      }).catch(() => {\n        this.$message.info('已取消删除')\n      })\n    },\n    // 获取创建链接\n    fn_getLink() {\n      this.dialogFormVisible = true\n      this.state = '创建'\n      getShareLink().then(res => {\n        // console.log(res.data.retData)\n        this.form = res.data.retData.dataDict\n        this.radioTextChange('text1')\n        this.radioTextChange('text2')\n      })\n    },\n    // 文案编辑单选按钮change\n    radioTextChange(textNum) {\n      if (this.state !== '创建') {\n        return\n      }\n      if (textNum === 'text1' && this.radioText1 === '1') {\n        this.form.text1 = '已获取用户信息，将使用默认方案！'\n      } else if (textNum === 'text1') {\n        this.form.text1 = this.customText.text1\n      }\n      if (textNum === 'text2' && this.radioText2 === '1') {\n        this.form.text2 = '已获取用户信息，将使用默认方案！'\n      } else if (textNum === 'text2') {\n        this.form.text2 = this.customText.text2\n      }\n    },\n    // 创建新实验\n    fn_create() {\n      if (this.state === '创建') {\n        this.$refs['ruleForm'].validate((valid) => {\n          if (valid) {\n            // 如果选择获取用户信息 传'no',表示选用默认文案\n            if (this.radioText1 === '1') {\n              this.form.text1 = 'no'\n            }\n            if (this.radioText2 === '1') {\n              this.form.text2 = 'no'\n            }\n            createShare(qs.stringify(this.form)).then((res) => {\n              // console.log(res.data.retData)\n              if (res.data.retData.msg === 200) {\n                // console.log(res.data.retData)\n                this.$message.success('创建成功')\n                this.form = {}\n                this.customText.text1 = ''\n                this.customText.text2 = ''\n                this.dialogFormVisible = false\n                this.reload()\n              }\n            })\n          }\n        })\n      } else if (this.state === '编辑') {\n        editOrDeleteShare(qs.stringify(this.form)).then((res) => {\n          if (res.data.retData.msg === 200) {\n            this.$message.success('编辑成功')\n            this.form = {}\n            this.dialogFormVisible = false\n            this.reload()\n          }\n        })\n      }\n    },\n    // 导出的方法\n    handleDownloadData(row) {\n      // console.log(this.timeBucket, row.index)\n      const params = {\n        index: row.index,\n        start: this.timeBucket[0],\n        end: this.timeBucket[1]\n      }\n      const table = []\n      exportShare(qs.stringify(params)).then((res) => {\n        // console.log(res.data.retData.dataDict)\n        res.data.retData.dataDict.dataLis.forEach(item => {\n          item.name = res.data.retData.dataDict.name\n          table.push(item)\n        })\n        // 导出表格的表头设置\n        this.tableTitleData.unshift({ label: '日期', prop: 'date' })\n        const allColumns = this.tableTitleData\n        var columnNames = []\n        var columnValues = []\n        for (var i = 0; i < allColumns.length; i++) {\n          columnNames[i] = allColumns[i].label\n          columnValues[i] = allColumns[i].prop\n        }\n        require.ensure([], () => {\n          const { export_json_to_excel } = require('@/utils/Export2Excel')\n          const tHeader = columnNames\n          const filterVal = columnValues\n          const list = table\n          const defaultTitle = res.data.retData.dataDict.name\n          const data = this.formatJson(filterVal, list)\n          export_json_to_excel(tHeader, data, defaultTitle)\n        })\n        this.tableTitleData.shift()\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => v[j]))\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.exportTable{\n  float: right;\n  margin-top: 10px;\n  margin-right: 5px;\n}\n</style>\n"]}]}