{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\ranking\\echart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\ranking\\echart.vue","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZWNoYXJ0JywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2xpZGVyTWF4OiAnJywKICAgICAgc2xpZGVyRGF0ZVZhbDogWzAsICcnXSwKICAgICAgbXlDaGFydDE6ICcnLAogICAgICAvLyDmipjnur/lm77phY3nva4KICAgICAgbGluZU9wdGlvbnM6IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJycsCiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFdlaWdodDogJ25vcm1hbCcsCiAgICAgICAgICAgIGZvbnRTaXplOiAxNgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIC8vIGRhdGE6IFsn5LuK5pelJywgJ+aYqOaXpSddLAogICAgICAgICAgLy8gYm90dG9tOiAiMCUiCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAnMCUnLAogICAgICAgICAgcmlnaHQ6ICczMCcsCiAgICAgICAgICBib3R0b206ICcxMCUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGRhdGE6IFsnMDYtMDEnLCAnMDYtMDInLCAnMDYtMDMnLCAnMDYtMDQnLCAnMDYtMDUnLCAnMDYtMDYnLCAnMDYtMDcnXQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9LAogICAgICAgIHNlcmllczogWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5LuK5pelJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBbMTIwLCAxMzIsIDEwMSwgMTM0LCA5MCwgMjMwLCAyMTBdCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAn5pio5pelJywKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBbMjIwLCAxODIsIDE5MSwgMjM0LCAyOTAsIDMzMCwgMzEwXQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgeEF4aXNEYXRhOiBbXSwKICAgICAgcGlja2VyT3B0aW9uczogewogICAgICAgIHNob3J0Y3V0czogW3sKICAgICAgICAgIHRleHQ6ICfmnIDov5HkuIDlkagnLAogICAgICAgICAgb25DbGljayhwaWNrZXIpIHsKICAgICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKQogICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogNykKICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKQogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHRleHQ6ICfmnIDov5HkuIDkuKrmnIgnLAogICAgICAgICAgb25DbGljayhwaWNrZXIpIHsKICAgICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKQogICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogMzApCiAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSkKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiJ5Liq5pyIJywKICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKCkKICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZSgpCiAgICAgICAgICAgIHN0YXJ0LnNldFRpbWUoc3RhcnQuZ2V0VGltZSgpIC0gMzYwMCAqIDEwMDAgKiAyNCAqIDkwKQogICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfSwKICAgICAgZGF0ZVNlYXJjaDogJycsCiAgICAgIG9wdGlvbnM6IFt7CiAgICAgICAgdmFsdWU6ICfpgInpobkxJywKICAgICAgICBsYWJlbDogJ+ilv+WfjuW5v+WcuicKICAgICAgfSwgewogICAgICAgIHZhbHVlOiAn6YCJ6aG5MicsCiAgICAgICAgbGFiZWw6ICfmoaPmoYjppoYnCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogJ+mAiemhuTMnLAogICAgICAgIGxhYmVsOiAn5Z+O6KW/6ZO25rOwJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6ICfpgInpobk0JywKICAgICAgICBsYWJlbDogJ+ilv+a5luaWh+WMluW5v+WcuicKICAgICAgfSwgewogICAgICAgIHZhbHVlOiAn6YCJ6aG5NScsCiAgICAgICAgbGFiZWw6ICfmt7HlnLMnCiAgICAgIH1dLAogICAgICB2YWx1ZTogJycsCiAgICAgIHZlcnNpb25PcHQ6IFt7CiAgICAgICAgdmFsdWU6ICc0LjEuMCcsCiAgICAgICAgbGFiZWw6ICc0LjEuMCcKICAgICAgfSwgewogICAgICAgIHZhbHVlOiAnNC4xLjEnLAogICAgICAgIGxhYmVsOiAnNC4xLjEnCiAgICAgIH0sIHsKICAgICAgICB2YWx1ZTogJzQuMS4yJywKICAgICAgICBsYWJlbDogJzQuMS4yJwogICAgICB9XSwKICAgICAgdmVyc2lvblZhbDogJycsCiAgICAgIHRhYlBhbmVPcHQ6IFsn5paw5aKe5Lq65pWwJywgJ+WIhuS6q+asoeaVsCcsICflhYXlgLzkurrmlbAnLCAn5YWF5YC86YeR6aKdJywgJ+aAu+W5s+Wdh+aXtumVvycsICflub/lnLroiJ7lubPlnYfml7bplb8nLCAn6IGK5aSp5a6k5bmz5Z2H5pe26ZW/JywgJ+mfs+S5kOaIv+mXtOW5s+Wdh+aXtumVvycsICfnm7Tmkq3pl7TlubPlnYfml7bplb8nLCAn5LiK6bqm546HJ10KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmluaXQoKQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgdGhpcy5kcmF3TGluZSgpCiAgICB9KQogICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsICgpID0+IHsKICAgIC8vICAgLy8g56qX5Y+j5Y+Y5YyW5pe26YeN57uY5oqY57q/5Zu+CiAgICAvLyAgIHRoaXMubXlDaGFydDEucmVzaXplKCkKICAgIC8vIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+aKmOe6v+WbvgogICAgZHJhd0xpbmUoKSB7CiAgICAgIC8vIOiOt+WPluaKmOe6v+WbvuiKgueCuQogICAgICB0aGlzLm15Q2hhcnQxID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaW5lMScpKQogICAgICAvLyDorr7nva7lm77ooajmlbDmja4KICAgICAgdGhpcy5teUNoYXJ0MS5zZXRPcHRpb24odGhpcy5saW5lT3B0aW9ucykKICAgIH0sCiAgICBzbGlkZXJDaGFuZ2UoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2xpZGVyRGF0ZVZhbCkKICAgICAgY29uc29sZS5sb2coTWF0aC5tYXguYXBwbHkobnVsbCwgdGhpcy5zbGlkZXJEYXRlVmFsKSkKICAgICAgdGhpcy5saW5lT3B0aW9ucy54QXhpcy5kYXRhID0gdGhpcy54QXhpc0RhdGEuc2xpY2UoTWF0aC5taW4uYXBwbHkobnVsbCwgdGhpcy5zbGlkZXJEYXRlVmFsKSwgTWF0aC5tYXguYXBwbHkobnVsbCwgdGhpcy5zbGlkZXJEYXRlVmFsKSkKICAgICAgY29uc29sZS5sb2codGhpcy5saW5lT3B0aW9ucy54QXhpcy5kYXRhKQogICAgICB0aGlzLm15Q2hhcnQxLmRpc3Bvc2UoKS8v6ZSA5q+BCgogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5kcmF3TGluZSgpCiAgICAgIH0pCiAgICB9LAogICAgLy8g5bem5L6n5pCc57SiCiAgICBzZWFyY2goZXYpIHsKICAgICAgLy8gdGhpcy5saW5lT3B0aW9ucy54QXhpcy5kYXRhLnNoaWZ0KCkKICAgICAgaWYgKGV2KSByZXR1cm4KICAgICAgY29uc29sZS5sb2codGhpcy52YWx1ZSkKICAgIH0sCiAgICAvLyDml6XmnJ/mkJzntKIKICAgIGRhdGVDaGFuZ2UoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0ZVNlYXJjaCkKICAgIH0sCiAgICBpbml0KCkgewogICAgICB0aGlzLnNsaWRlckRhdGVWYWxbMV0gPSB0aGlzLmxpbmVPcHRpb25zLnhBeGlzLmRhdGEubGVuZ3RoCiAgICAgIHRoaXMuc2xpZGVyTWF4ID0gdGhpcy5zbGlkZXJEYXRlVmFsWzFdCiAgICAgIHRoaXMueEF4aXNEYXRhID0gdGhpcy5saW5lT3B0aW9ucy54QXhpcy5kYXRhCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2xpZGVyRGF0ZVZhbCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["echart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"echart.vue","sourceRoot":"src/views/ranking","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 卡片视图 -->\n    <el-card>\n      <!-- 顶部搜索 日期 -->\n      <div>\n        <el-row :gutter=\"10\" style=\"margin-bottom: 20px;\">\n          <el-col :span=\"12\">\n            <template>\n              <el-select v-model=\"value\" filterable multiple clearable collapse-tags placeholder=\"渠道对比\" @visible-change=\"search($event)\">\n                <el-option\n                  v-for=\"item in options\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </template>\n          </el-col>\n          <el-col :span=\"12\">\n            <template>\n              <div class=\"block\">\n                <el-date-picker\n                  v-model=\"dateSearch\"\n                  type=\"daterange\"\n                  unlink-panels\n                  range-separator=\"至\"\n                  start-placeholder=\"开始日期\"\n                  end-placeholder=\"结束日期\"\n                  :picker-options=\"pickerOptions\"\n                  value-format=\"yyyy-MM-dd\"\n                  @change=\"dateChange\"\n                >\n                </el-date-picker>\n              </div>\n            </template>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"10\" style=\"margin-bottom: 20px;\">\n          <el-col :span=\"12\">\n            <template>\n              <el-select v-model=\"versionVal\" filterable multiple clearable collapse-tags placeholder=\"版本对比\" @visible-change=\"search($event)\">\n                <el-option\n                  v-for=\"item in versionOpt\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </template>\n          </el-col>\n        </el-row>\n      </div>\n      <!-- 选项 -->\n      <div>\n        <el-tabs type=\"card\">\n          <el-tab-pane v-for=\"(item,index) in tabPaneOpt\" :key=\"index\" :label=\"item\">{{ item }}</el-tab-pane>\n        </el-tabs>\n      </div>\n      <div id=\"line1\" style=\"width:80%;height:500px;\"></div>\n      <template>\n        <div class=\"sliderBlock\">\n          <el-slider\n            v-model=\"sliderDateVal\"\n            range\n            :max=\"sliderMax\"\n            @change=\"sliderChange\"\n          ></el-slider>\n        </div>\n      </template>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'echart',\n  data() {\n    return {\n      sliderMax: '',\n      sliderDateVal: [0, ''],\n      myChart1: '',\n      // 折线图配置\n      lineOptions: {\n        title: {\n          text: '',\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          // data: ['今日', '昨日'],\n          // bottom: \"0%\"\n        },\n        grid: {\n          left: '0%',\n          right: '30',\n          bottom: '10%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['06-01', '06-02', '06-03', '06-04', '06-05', '06-06', '06-07']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            name: '今日',\n            type: 'line',\n            data: [120, 132, 101, 134, 90, 230, 210]\n          },\n          {\n            name: '昨日',\n            type: 'line',\n            data: [220, 182, 191, 234, 290, 330, 310]\n          }\n        ]\n      },\n      xAxisData: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      dateSearch: '',\n      options: [{\n        value: '选项1',\n        label: '西城广场'\n      }, {\n        value: '选项2',\n        label: '档案馆'\n      }, {\n        value: '选项3',\n        label: '城西银泰'\n      }, {\n        value: '选项4',\n        label: '西湖文化广场'\n      }, {\n        value: '选项5',\n        label: '深圳'\n      }],\n      value: '',\n      versionOpt: [{\n        value: '4.1.0',\n        label: '4.1.0'\n      }, {\n        value: '4.1.1',\n        label: '4.1.1'\n      }, {\n        value: '4.1.2',\n        label: '4.1.2'\n      }],\n      versionVal: '',\n      tabPaneOpt: ['新增人数', '分享次数', '充值人数', '充值金额', '总平均时长', '广场舞平均时长', '聊天室平均时长', '音乐房间平均时长', '直播间平均时长', '上麦率']\n    }\n  },\n  created() {\n    this.init()\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.drawLine()\n    })\n    // window.addEventListener('resize', () => {\n    //   // 窗口变化时重绘折线图\n    //   this.myChart1.resize()\n    // })\n  },\n  methods: {\n    //折线图\n    drawLine() {\n      // 获取折线图节点\n      this.myChart1 = echarts.init(document.getElementById('line1'))\n      // 设置图表数据\n      this.myChart1.setOption(this.lineOptions)\n    },\n    sliderChange() {\n      console.log(this.sliderDateVal)\n      console.log(Math.max.apply(null, this.sliderDateVal))\n      this.lineOptions.xAxis.data = this.xAxisData.slice(Math.min.apply(null, this.sliderDateVal), Math.max.apply(null, this.sliderDateVal))\n      console.log(this.lineOptions.xAxis.data)\n      this.myChart1.dispose()//销毁\n\n      this.$nextTick(() => {\n        this.drawLine()\n      })\n    },\n    // 左侧搜索\n    search(ev) {\n      // this.lineOptions.xAxis.data.shift()\n      if (ev) return\n      console.log(this.value)\n    },\n    // 日期搜索\n    dateChange() {\n      console.log(this.dateSearch)\n    },\n    init() {\n      this.sliderDateVal[1] = this.lineOptions.xAxis.data.length\n      this.sliderMax = this.sliderDateVal[1]\n      this.xAxisData = this.lineOptions.xAxis.data\n      console.log(this.sliderDateVal)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.block {\n  float: right;\n}\n\n.sliderBlock {\n  width: 80%;\n}\n</style>\n"]}]}