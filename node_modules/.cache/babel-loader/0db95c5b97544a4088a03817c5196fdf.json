{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_element-ui@2.15.6@element-ui\\packages\\image\\src\\image-viewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_element-ui@2.15.6@element-ui\\packages\\image\\src\\image-viewer.vue","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\babel.config.js","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzpcXFVzZXJzXFxTYWt1cmFcXERvd25sb2Fkc1xcQ29tcHJlc3NlZFxcc3VpYm9fYmFja3VwX3N5c3RlbVxcbm9kZV9tb2R1bGVzXFxfQGJhYmVsX3J1bnRpbWVANy4xNi4zQEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxvYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgb24sIG9mZiB9IGZyb20gJ2VsZW1lbnQtdWkvc3JjL3V0aWxzL2RvbSc7CmltcG9ydCB7IHJhZlRocm90dGxlLCBpc0ZpcmVmb3ggfSBmcm9tICdlbGVtZW50LXVpL3NyYy91dGlscy91dGlsJzsKaW1wb3J0IHsgUG9wdXBNYW5hZ2VyIH0gZnJvbSAnZWxlbWVudC11aS9zcmMvdXRpbHMvcG9wdXAnOwp2YXIgTW9kZSA9IHsKICBDT05UQUlOOiB7CiAgICBuYW1lOiAnY29udGFpbicsCiAgICBpY29uOiAnZWwtaWNvbi1mdWxsLXNjcmVlbicKICB9LAogIE9SSUdJTkFMOiB7CiAgICBuYW1lOiAnb3JpZ2luYWwnLAogICAgaWNvbjogJ2VsLWljb24tYy1zY2FsZS10by1vcmlnaW5hbCcKICB9Cn07CnZhciBtb3VzZXdoZWVsRXZlbnROYW1lID0gaXNGaXJlZm94KCkgPyAnRE9NTW91c2VTY3JvbGwnIDogJ21vdXNld2hlZWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2VsSW1hZ2VWaWV3ZXInLAogIHByb3BzOiB7CiAgICB1cmxMaXN0OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICB6SW5kZXg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyMDAwCiAgICB9LAogICAgb25Td2l0Y2g6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkge30KICAgIH0sCiAgICBvbkNsb3NlOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHt9CiAgICB9LAogICAgaW5pdGlhbEluZGV4OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIGFwcGVuZFRvQm9keTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgbWFza0Nsb3NhYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbmRleDogdGhpcy5pbml0aWFsSW5kZXgsCiAgICAgIGlzU2hvdzogZmFsc2UsCiAgICAgIGluZmluaXRlOiB0cnVlLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgbW9kZTogTW9kZS5DT05UQUlOLAogICAgICB0cmFuc2Zvcm06IHsKICAgICAgICBzY2FsZTogMSwKICAgICAgICBkZWc6IDAsCiAgICAgICAgb2Zmc2V0WDogMCwKICAgICAgICBvZmZzZXRZOiAwLAogICAgICAgIGVuYWJsZVRyYW5zaXRpb246IGZhbHNlCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaXNTaW5nbGU6IGZ1bmN0aW9uIGlzU2luZ2xlKCkgewogICAgICByZXR1cm4gdGhpcy51cmxMaXN0Lmxlbmd0aCA8PSAxOwogICAgfSwKICAgIGlzRmlyc3Q6IGZ1bmN0aW9uIGlzRmlyc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLmluZGV4ID09PSAwOwogICAgfSwKICAgIGlzTGFzdDogZnVuY3Rpb24gaXNMYXN0KCkgewogICAgICByZXR1cm4gdGhpcy5pbmRleCA9PT0gdGhpcy51cmxMaXN0Lmxlbmd0aCAtIDE7CiAgICB9LAogICAgY3VycmVudEltZzogZnVuY3Rpb24gY3VycmVudEltZygpIHsKICAgICAgcmV0dXJuIHRoaXMudXJsTGlzdFt0aGlzLmluZGV4XTsKICAgIH0sCiAgICBpbWdTdHlsZTogZnVuY3Rpb24gaW1nU3R5bGUoKSB7CiAgICAgIHZhciBfdGhpcyR0cmFuc2Zvcm0gPSB0aGlzLnRyYW5zZm9ybSwKICAgICAgICAgIHNjYWxlID0gX3RoaXMkdHJhbnNmb3JtLnNjYWxlLAogICAgICAgICAgZGVnID0gX3RoaXMkdHJhbnNmb3JtLmRlZywKICAgICAgICAgIG9mZnNldFggPSBfdGhpcyR0cmFuc2Zvcm0ub2Zmc2V0WCwKICAgICAgICAgIG9mZnNldFkgPSBfdGhpcyR0cmFuc2Zvcm0ub2Zmc2V0WSwKICAgICAgICAgIGVuYWJsZVRyYW5zaXRpb24gPSBfdGhpcyR0cmFuc2Zvcm0uZW5hYmxlVHJhbnNpdGlvbjsKICAgICAgdmFyIHN0eWxlID0gewogICAgICAgIHRyYW5zZm9ybTogInNjYWxlKCIuY29uY2F0KHNjYWxlLCAiKSByb3RhdGUoIikuY29uY2F0KGRlZywgImRlZykiKSwKICAgICAgICB0cmFuc2l0aW9uOiBlbmFibGVUcmFuc2l0aW9uID8gJ3RyYW5zZm9ybSAuM3MnIDogJycsCiAgICAgICAgJ21hcmdpbi1sZWZ0JzogIiIuY29uY2F0KG9mZnNldFgsICJweCIpLAogICAgICAgICdtYXJnaW4tdG9wJzogIiIuY29uY2F0KG9mZnNldFksICJweCIpCiAgICAgIH07CgogICAgICBpZiAodGhpcy5tb2RlID09PSBNb2RlLkNPTlRBSU4pIHsKICAgICAgICBzdHlsZS5tYXhXaWR0aCA9IHN0eWxlLm1heEhlaWdodCA9ICcxMDAlJzsKICAgICAgfQoKICAgICAgcmV0dXJuIHN0eWxlOwogICAgfSwKICAgIHZpZXdlclpJbmRleDogZnVuY3Rpb24gdmlld2VyWkluZGV4KCkgewogICAgICB2YXIgbmV4dFpJbmRleCA9IFBvcHVwTWFuYWdlci5uZXh0WkluZGV4KCk7CiAgICAgIHJldHVybiB0aGlzLnpJbmRleCA+IG5leHRaSW5kZXggPyB0aGlzLnpJbmRleCA6IG5leHRaSW5kZXg7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaW5kZXg6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWwpIHsKICAgICAgICB0aGlzLnJlc2V0KCk7CiAgICAgICAgdGhpcy5vblN3aXRjaCh2YWwpOwogICAgICB9CiAgICB9LAogICAgY3VycmVudEltZzogZnVuY3Rpb24gY3VycmVudEltZyh2YWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uIChfKSB7CiAgICAgICAgdmFyICRpbWcgPSBfdGhpcy4kcmVmcy5pbWdbMF07CgogICAgICAgIGlmICghJGltZy5jb21wbGV0ZSkgewogICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhpZGU6IGZ1bmN0aW9uIGhpZGUoKSB7CiAgICAgIHRoaXMuZGV2aWNlU3VwcG9ydFVuaW5zdGFsbCgpOwogICAgICB0aGlzLm9uQ2xvc2UoKTsKICAgIH0sCiAgICBkZXZpY2VTdXBwb3J0SW5zdGFsbDogZnVuY3Rpb24gZGV2aWNlU3VwcG9ydEluc3RhbGwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5fa2V5RG93bkhhbmRsZXIgPSBmdW5jdGlvbiAoZSkgewogICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgdmFyIGtleUNvZGUgPSBlLmtleUNvZGU7CgogICAgICAgIHN3aXRjaCAoa2V5Q29kZSkgewogICAgICAgICAgLy8gRVNDCiAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICBfdGhpczIuaGlkZSgpOwoKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAvLyBTUEFDRQoKICAgICAgICAgIGNhc2UgMzI6CiAgICAgICAgICAgIF90aGlzMi50b2dnbGVNb2RlKCk7CgogICAgICAgICAgICBicmVhazsKICAgICAgICAgIC8vIExFRlRfQVJST1cKCiAgICAgICAgICBjYXNlIDM3OgogICAgICAgICAgICBfdGhpczIucHJldigpOwoKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAvLyBVUF9BUlJPVwoKICAgICAgICAgIGNhc2UgMzg6CiAgICAgICAgICAgIF90aGlzMi5oYW5kbGVBY3Rpb25zKCd6b29tSW4nKTsKCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgLy8gUklHSFRfQVJST1cKCiAgICAgICAgICBjYXNlIDM5OgogICAgICAgICAgICBfdGhpczIubmV4dCgpOwoKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAvLyBET1dOX0FSUk9XCgogICAgICAgICAgY2FzZSA0MDoKICAgICAgICAgICAgX3RoaXMyLmhhbmRsZUFjdGlvbnMoJ3pvb21PdXQnKTsKCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHRoaXMuX21vdXNlV2hlZWxIYW5kbGVyID0gcmFmVGhyb3R0bGUoZnVuY3Rpb24gKGUpIHsKICAgICAgICB2YXIgZGVsdGEgPSBlLndoZWVsRGVsdGEgPyBlLndoZWVsRGVsdGEgOiAtZS5kZXRhaWw7CgogICAgICAgIGlmIChkZWx0YSA+IDApIHsKICAgICAgICAgIF90aGlzMi5oYW5kbGVBY3Rpb25zKCd6b29tSW4nLCB7CiAgICAgICAgICAgIHpvb21SYXRlOiAwLjAxNSwKICAgICAgICAgICAgZW5hYmxlVHJhbnNpdGlvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIuaGFuZGxlQWN0aW9ucygnem9vbU91dCcsIHsKICAgICAgICAgICAgem9vbVJhdGU6IDAuMDE1LAogICAgICAgICAgICBlbmFibGVUcmFuc2l0aW9uOiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgb24oZG9jdW1lbnQsICdrZXlkb3duJywgdGhpcy5fa2V5RG93bkhhbmRsZXIpOwogICAgICBvbihkb2N1bWVudCwgbW91c2V3aGVlbEV2ZW50TmFtZSwgdGhpcy5fbW91c2VXaGVlbEhhbmRsZXIpOwogICAgfSwKICAgIGRldmljZVN1cHBvcnRVbmluc3RhbGw6IGZ1bmN0aW9uIGRldmljZVN1cHBvcnRVbmluc3RhbGwoKSB7CiAgICAgIG9mZihkb2N1bWVudCwgJ2tleWRvd24nLCB0aGlzLl9rZXlEb3duSGFuZGxlcik7CiAgICAgIG9mZihkb2N1bWVudCwgbW91c2V3aGVlbEV2ZW50TmFtZSwgdGhpcy5fbW91c2VXaGVlbEhhbmRsZXIpOwogICAgICB0aGlzLl9rZXlEb3duSGFuZGxlciA9IG51bGw7CiAgICAgIHRoaXMuX21vdXNlV2hlZWxIYW5kbGVyID0gbnVsbDsKICAgIH0sCiAgICBoYW5kbGVJbWdMb2FkOiBmdW5jdGlvbiBoYW5kbGVJbWdMb2FkKGUpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlSW1nRXJyb3I6IGZ1bmN0aW9uIGhhbmRsZUltZ0Vycm9yKGUpIHsKICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIGUudGFyZ2V0LmFsdCA9ICfliqDovb3lpLHotKUnOwogICAgfSwKICAgIGhhbmRsZU1vdXNlRG93bjogZnVuY3Rpb24gaGFuZGxlTW91c2VEb3duKGUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBpZiAodGhpcy5sb2FkaW5nIHx8IGUuYnV0dG9uICE9PSAwKSByZXR1cm47CiAgICAgIHZhciBfdGhpcyR0cmFuc2Zvcm0yID0gdGhpcy50cmFuc2Zvcm0sCiAgICAgICAgICBvZmZzZXRYID0gX3RoaXMkdHJhbnNmb3JtMi5vZmZzZXRYLAogICAgICAgICAgb2Zmc2V0WSA9IF90aGlzJHRyYW5zZm9ybTIub2Zmc2V0WTsKICAgICAgdmFyIHN0YXJ0WCA9IGUucGFnZVg7CiAgICAgIHZhciBzdGFydFkgPSBlLnBhZ2VZOwogICAgICB0aGlzLl9kcmFnSGFuZGxlciA9IHJhZlRocm90dGxlKGZ1bmN0aW9uIChldikgewogICAgICAgIF90aGlzMy50cmFuc2Zvcm0ub2Zmc2V0WCA9IG9mZnNldFggKyBldi5wYWdlWCAtIHN0YXJ0WDsKICAgICAgICBfdGhpczMudHJhbnNmb3JtLm9mZnNldFkgPSBvZmZzZXRZICsgZXYucGFnZVkgLSBzdGFydFk7CiAgICAgIH0pOwogICAgICBvbihkb2N1bWVudCwgJ21vdXNlbW92ZScsIHRoaXMuX2RyYWdIYW5kbGVyKTsKICAgICAgb24oZG9jdW1lbnQsICdtb3VzZXVwJywgZnVuY3Rpb24gKGV2KSB7CiAgICAgICAgb2ZmKGRvY3VtZW50LCAnbW91c2Vtb3ZlJywgX3RoaXMzLl9kcmFnSGFuZGxlcik7CiAgICAgIH0pOwogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9LAogICAgaGFuZGxlTWFza0NsaWNrOiBmdW5jdGlvbiBoYW5kbGVNYXNrQ2xpY2soKSB7CiAgICAgIGlmICh0aGlzLm1hc2tDbG9zYWJsZSkgewogICAgICAgIHRoaXMuaGlkZSgpOwogICAgICB9CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLnRyYW5zZm9ybSA9IHsKICAgICAgICBzY2FsZTogMSwKICAgICAgICBkZWc6IDAsCiAgICAgICAgb2Zmc2V0WDogMCwKICAgICAgICBvZmZzZXRZOiAwLAogICAgICAgIGVuYWJsZVRyYW5zaXRpb246IGZhbHNlCiAgICAgIH07CiAgICB9LAogICAgdG9nZ2xlTW9kZTogZnVuY3Rpb24gdG9nZ2xlTW9kZSgpIHsKICAgICAgaWYgKHRoaXMubG9hZGluZykgcmV0dXJuOwogICAgICB2YXIgbW9kZU5hbWVzID0gT2JqZWN0LmtleXMoTW9kZSk7CiAgICAgIHZhciBtb2RlVmFsdWVzID0gT2JqZWN0LnZhbHVlcyhNb2RlKTsKICAgICAgdmFyIGluZGV4ID0gbW9kZVZhbHVlcy5pbmRleE9mKHRoaXMubW9kZSk7CiAgICAgIHZhciBuZXh0SW5kZXggPSAoaW5kZXggKyAxKSAlIG1vZGVOYW1lcy5sZW5ndGg7CiAgICAgIHRoaXMubW9kZSA9IE1vZGVbbW9kZU5hbWVzW25leHRJbmRleF1dOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogICAgcHJldjogZnVuY3Rpb24gcHJldigpIHsKICAgICAgaWYgKHRoaXMuaXNGaXJzdCAmJiAhdGhpcy5pbmZpbml0ZSkgcmV0dXJuOwogICAgICB2YXIgbGVuID0gdGhpcy51cmxMaXN0Lmxlbmd0aDsKICAgICAgdGhpcy5pbmRleCA9ICh0aGlzLmluZGV4IC0gMSArIGxlbikgJSBsZW47CiAgICB9LAogICAgbmV4dDogZnVuY3Rpb24gbmV4dCgpIHsKICAgICAgaWYgKHRoaXMuaXNMYXN0ICYmICF0aGlzLmluZmluaXRlKSByZXR1cm47CiAgICAgIHZhciBsZW4gPSB0aGlzLnVybExpc3QubGVuZ3RoOwogICAgICB0aGlzLmluZGV4ID0gKHRoaXMuaW5kZXggKyAxKSAlIGxlbjsKICAgIH0sCiAgICBoYW5kbGVBY3Rpb25zOiBmdW5jdGlvbiBoYW5kbGVBY3Rpb25zKGFjdGlvbikgewogICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgICAgIGlmICh0aGlzLmxvYWRpbmcpIHJldHVybjsKCiAgICAgIHZhciBfem9vbVJhdGUkcm90YXRlRGVnJGUgPSBfb2JqZWN0U3ByZWFkKHsKICAgICAgICB6b29tUmF0ZTogMC4yLAogICAgICAgIHJvdGF0ZURlZzogOTAsCiAgICAgICAgZW5hYmxlVHJhbnNpdGlvbjogdHJ1ZQogICAgICB9LCBvcHRpb25zKSwKICAgICAgICAgIHpvb21SYXRlID0gX3pvb21SYXRlJHJvdGF0ZURlZyRlLnpvb21SYXRlLAogICAgICAgICAgcm90YXRlRGVnID0gX3pvb21SYXRlJHJvdGF0ZURlZyRlLnJvdGF0ZURlZywKICAgICAgICAgIGVuYWJsZVRyYW5zaXRpb24gPSBfem9vbVJhdGUkcm90YXRlRGVnJGUuZW5hYmxlVHJhbnNpdGlvbjsKCiAgICAgIHZhciB0cmFuc2Zvcm0gPSB0aGlzLnRyYW5zZm9ybTsKCiAgICAgIHN3aXRjaCAoYWN0aW9uKSB7CiAgICAgICAgY2FzZSAnem9vbU91dCc6CiAgICAgICAgICBpZiAodHJhbnNmb3JtLnNjYWxlID4gMC4yKSB7CiAgICAgICAgICAgIHRyYW5zZm9ybS5zY2FsZSA9IHBhcnNlRmxvYXQoKHRyYW5zZm9ybS5zY2FsZSAtIHpvb21SYXRlKS50b0ZpeGVkKDMpKTsKICAgICAgICAgIH0KCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnem9vbUluJzoKICAgICAgICAgIHRyYW5zZm9ybS5zY2FsZSA9IHBhcnNlRmxvYXQoKHRyYW5zZm9ybS5zY2FsZSArIHpvb21SYXRlKS50b0ZpeGVkKDMpKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdjbG9jZWxpc2UnOgogICAgICAgICAgdHJhbnNmb3JtLmRlZyArPSByb3RhdGVEZWc7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnYW50aWNsb2NlbGlzZSc6CiAgICAgICAgICB0cmFuc2Zvcm0uZGVnIC09IHJvdGF0ZURlZzsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICB0cmFuc2Zvcm0uZW5hYmxlVHJhbnNpdGlvbiA9IGVuYWJsZVRyYW5zaXRpb247CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kZXZpY2VTdXBwb3J0SW5zdGFsbCgpOwoKICAgIGlmICh0aGlzLmFwcGVuZFRvQm9keSkgewogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuJGVsKTsKICAgIH0gLy8gYWRkIHRhYmluZGV4IHRoZW4gd3JhcHBlciBjYW4gYmUgZm9jdXNhYmxlIHZpYSBKYXZhc2NyaXB0CiAgICAvLyBmb2N1cyB3cmFwcGVyIHNvIGFycm93IGtleSBjYW4ndCBjYXVzZSBpbm5lciBzY3JvbGwgYmVoYXZpb3IgdW5kZXJuZWF0aAoKCiAgICB0aGlzLiRyZWZzWydlbC1pbWFnZS12aWV3ZXJfX3dyYXBwZXInXS5mb2N1cygpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICAvLyBpZiBhcHBlbmRUb0JvZHkgaXMgdHJ1ZSwgcmVtb3ZlIERPTSBub2RlIGFmdGVyIGRlc3Ryb3kKICAgIGlmICh0aGlzLmFwcGVuZFRvQm9keSAmJiB0aGlzLiRlbCAmJiB0aGlzLiRlbC5wYXJlbnROb2RlKSB7CiAgICAgIHRoaXMuJGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy4kZWwpOwogICAgfQogIH0KfTs="},null]}