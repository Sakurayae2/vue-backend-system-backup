{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\list.vue","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\babel.config.js","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_thread-loader@2.1.3@thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}