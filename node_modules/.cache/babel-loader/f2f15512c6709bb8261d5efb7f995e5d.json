{"remainingRequest":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\testlist.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\src\\views\\award\\testlist.vue","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\babel.config.js","mtime":1637930052000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_babel-loader@8.2.3@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sakura\\Downloads\\Compressed\\suibo_backup_system\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0VGVzdCwgYWRkVGVzdCwgZGVsZXRlVGVzdCB9IGZyb20gJ0AvYXBpL2F3YXJkJzsKaW1wb3J0IHFzIGZyb20gJ3FzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hJbnB1dDogJycsCiAgICAgIHVpbjogJycsCiAgICAgIHRlc3RMaXN0OiAnJywKICAgICAgZHluYW1pY1RhZ3M6IFtdLAogICAgICBpbnB1dFZpc2libGU6IGZhbHNlLAogICAgICBpbnB1dFZhbHVlOiAnJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRlc3RMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWFyY2g6IGZ1bmN0aW9uIHNlYXJjaCgpIHsKICAgICAgdmFyIGluZGV4ID0gdGhpcy5keW5hbWljVGFncy5pbmRleE9mKHRoaXMuc2VhcmNoSW5wdXQpOyAvLyBjb25zb2xlLmxvZyhpbmRleCkKCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZHluYW1pY1RhZ3NbaW5kZXhdKTsKICAgICAgdmFyIHRhZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0YWdzJyk7CiAgICAgIHRhZ3NbaW5kZXhdLnN0eWxlLmNvbG9yID0gInJlZCI7CiAgICAgIHRhZ3NbaW5kZXhdLnN0eWxlLmJvcmRlckNvbG9yID0gInJlZCI7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHRhZ3NbaW5kZXhdLnN0eWxlLmNvbG9yID0gIiM0MDlFRkYiOwogICAgICAgIHRhZ3NbaW5kZXhdLnN0eWxlLmJvcmRlckNvbG9yID0gIiNkOWVjZmYiOwogICAgICB9LCAxMDAwMCk7CiAgICAgIHRoaXMuc2VhcmNoSW5wdXQgPSAnJzsKICAgIH0sCiAgICBnZXRUZXN0TGlzdDogZnVuY3Rpb24gZ2V0VGVzdExpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBnZXRUZXN0KCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMudGVzdExpc3QgPSByZXMuZGF0YS5yZXREYXRhLmRhdGFMaXN0OwogICAgICAgIF90aGlzLmR5bmFtaWNUYWdzID0gcmVzLmRhdGEucmV0RGF0YS5kYXRhTGlzdDsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5re75Yqg5aSa5LiqCiAgICBhZGRUZXN0VXNlcjogZnVuY3Rpb24gYWRkVGVzdFVzZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgbmV3X2xpc3Q6IHRoaXMudWluCiAgICAgIH07CiAgICAgIGFkZFRlc3QocXMuc3RyaW5naWZ5KGRhdGEpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuJG1lc3NhZ2Uuc3VjY2Vzcygn5re75Yqg5paw55So5oi377yaJyArIHJlcy5kYXRhLnJldERhdGEuZGF0YUxpc3QgKyAnIOaIkOWKnycpOwoKICAgICAgICBfdGhpczIuZ2V0VGVzdExpc3QoKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Yig6Zmk55So5oi3CiAgICBoYW5kbGVDbG9zZTogZnVuY3Rpb24gaGFuZGxlQ2xvc2UodGFnKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgbmV3X2xpc3Q6IHRhZwogICAgICB9OwogICAgICBkZWxldGVUZXN0KHFzLnN0cmluZ2lmeShkYXRhKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aIkOWKn+WIoOmZpCcgKyByZXMuZGF0YS5yZXREYXRhLmRhdGFMaXN0KTsgLy8gdGhpcy5nZXRUZXN0TGlzdCgpCgoKICAgICAgICBfdGhpczMuZHluYW1pY1RhZ3Muc3BsaWNlKF90aGlzMy5keW5hbWljVGFncy5pbmRleE9mKHRhZyksIDEpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmmL7npLpOZXcgVGFn6L6T5YWl5qGGCiAgICBzaG93SW5wdXQ6IGZ1bmN0aW9uIHNob3dJbnB1dCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLmlucHV0VmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uIChfKSB7CiAgICAgICAgX3RoaXM0LiRyZWZzLnNhdmVUYWdJbnB1dC4kcmVmcy5pbnB1dC5mb2N1cygpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyBOZXcgVGFnIOa3u+WKoOaWsOeUqOaItwogICAgaGFuZGxlSW5wdXRDb25maXJtOiBmdW5jdGlvbiBoYW5kbGVJbnB1dENvbmZpcm0oKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgdmFyIGlucHV0VmFsdWUgPSB0aGlzLmlucHV0VmFsdWU7CgogICAgICBpZiAoaW5wdXRWYWx1ZSkgewogICAgICAgIHZhciBkYXRhID0gewogICAgICAgICAgbmV3X2xpc3Q6IGlucHV0VmFsdWUKICAgICAgICB9OwogICAgICAgIHZhciBpbmRleCA9IHRoaXMuZHluYW1pY1RhZ3MuaW5kZXhPZih0aGlzLmlucHV0VmFsdWUpOwoKICAgICAgICBpZiAoaW5kZXggPj0gMCkgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfph43lpI3mt7vliqDmlrDnlKjmiLfvvJonICsgdGhpcy5pbnB1dFZhbHVlICsgJyAnKTsKICAgICAgICAgIHZhciB0YWdzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgndGFncycpOwogICAgICAgICAgdGFnc1tpbmRleF0uc3R5bGUuYm9yZGVyQ29sb3IgPSAicmVkIjsKICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0YWdzW2luZGV4XS5zdHlsZS5ib3JkZXJDb2xvciA9ICIjZDllY2ZmIjsKICAgICAgICAgIH0sIDMwMDApOwogICAgICAgICAgdGhpcy5pbnB1dFZhbHVlID0gJyc7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBnZXRUZXN0KHFzLnN0cmluZ2lmeShkYXRhKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczUuJG1lc3NhZ2Uuc3VjY2Vzcygn5re75Yqg5paw55So5oi377yaJyArIF90aGlzNS5pbnB1dFZhbHVlICsgJyDmiJDlip8nKTsgLy8gdGhpcy5nZXRUZXN0TGlzdCgpCgoKICAgICAgICAgIF90aGlzNS5keW5hbWljVGFncy5wdXNoKGlucHV0VmFsdWUpOwogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGlzLmlucHV0VmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLmlucHV0VmFsdWUgPSAnJzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["testlist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 卡片视图 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-input v-model=\"uin\" placeholder=\"请输入一个或多个ID,如:1,2,3\" @keyup.enter.native=\"addTestUser\" clearable>\n            <el-button slot=\"append\" icon=\"el-icon-plus\" @click=\"addTestUser\" />\n          </el-input>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-input v-model=\"searchInput\" placeholder=\"请输入本地搜索的ID\" @keyup.enter.native=\"search\" @blur=\"search\" clearable>\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"search\" />\n          </el-input>\n        </el-col>\n      </el-row>\n      <el-row :gutter=\"20\">\n        <el-col>\n          <p>测试用户名单:</p>\n          <div class=\"TestContent\">\n            <el-tag\n              v-for=\"tag in dynamicTags\"\n              :key=\"tag\"\n              closable\n              class=\"tags\"\n              :disable-transitions=\"false\"\n              @close=\"handleClose(tag)\"\n            >{{ tag }}\n            </el-tag>\n            <el-input\n              v-if=\"inputVisible\"\n              ref=\"saveTagInput\"\n              v-model=\"inputValue\"\n              class=\"input-new-tag\"\n              size=\"small\"\n              @keyup.enter.native=\"handleInputConfirm\"\n              @blur=\"handleInputConfirm\"\n            />\n            <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getTest, addTest, deleteTest } from '@/api/award'\nimport qs from 'qs'\n\nexport default {\n  data() {\n    return {\n      searchInput: '',\n      uin: '',\n      testList: '',\n      dynamicTags: [],\n      inputVisible: false,\n      inputValue: ''\n    }\n  },\n  created() {\n    this.getTestList()\n  },\n  methods: {\n    search(){\n      var index = this.dynamicTags.indexOf(this.searchInput)\n      // console.log(index)\n      console.log(this.dynamicTags[index])\n      const tags = document.getElementsByClassName('tags')\n      tags[index].style.color = \"red\"\n      tags[index].style.borderColor = \"red\"\n      setTimeout(() => {\n        tags[index].style.color = \"#409EFF\"\n        tags[index].style.borderColor = \"#d9ecff\"\n      }, 10000)\n      this.searchInput = ''\n    },\n    getTestList() {\n      getTest().then(res => {\n        this.testList = res.data.retData.dataList\n        this.dynamicTags = res.data.retData.dataList\n      })\n    },\n    // 添加多个\n    addTestUser() {\n      const data = { new_list: this.uin }\n      addTest(qs.stringify(data)).then(res => {\n        this.$message.success('添加新用户：' + res.data.retData.dataList + ' 成功')\n        this.getTestList()\n      })\n    },\n    // 删除用户\n    handleClose(tag) {\n      const data = { new_list: tag }\n      deleteTest(qs.stringify(data)).then(res => {\n        this.$message.success('成功删除' + res.data.retData.dataList)\n        // this.getTestList()\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\n      })\n    },\n    // 显示New Tag输入框\n    showInput() {\n      this.inputVisible = true\n      this.$nextTick(_ => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    // New Tag 添加新用户\n    handleInputConfirm() {\n      const inputValue = this.inputValue\n      if (inputValue) {\n        const data = { new_list: inputValue }\n        const index = this.dynamicTags.indexOf(this.inputValue)\n        if(index >= 0){\n          this.$message.warning('重复添加新用户：' + this.inputValue + ' ')\n          const tags = document.getElementsByClassName('tags')\n          tags[index].style.borderColor = \"red\"\n          setTimeout(() => {\n            tags[index].style.borderColor = \"#d9ecff\"\n          }, 3000)\n          this.inputValue = ''\n          return\n        }\n        getTest(qs.stringify(data)).then(res => {\n          this.$message.success('添加新用户：' + this.inputValue + ' 成功')\n          // this.getTestList()\n          this.dynamicTags.push(inputValue)\n        })\n      }\n      this.inputVisible = false\n      this.inputValue = ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.TestContent{\n  width: 80%;\n  min-height: 200px;\n  border: 1px solid #ccc;\n  margin-top: 20px;\n  padding: 10px;\n  border-radius: 5px;\n}\n.el-tag + .el-tag {\n  margin-top: 5px;\n  margin-left: 10px;\n}\n.button-new-tag {\n  margin-top: 5px;\n  margin-left: 10px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.input-new-tag {\n  width: 90px;\n  margin-left: 10px;\n  vertical-align: bottom;\n}\n</style>\n"],"sourceRoot":"src/views/award"}]}